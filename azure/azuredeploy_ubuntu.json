{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serverName": {
      "defaultValue": "my-taserver",
      "type": "string",
      "metadata": {
        "description": "This name is used for the VM & related resources in Azure. No spaces or special characters other than '-'"
      }
    },
    "SSHPubKey": {
      "type": "securestring"
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_F2s",
      "metadata": {
        "description": "If you don't know, use the default."
      }
    },
    "spotInstance": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Significantly lowers cost, but server will have a small chance of being shut down if there is not enough spare capacity."
      }
    },
    "enableAcceleratedNetworking": {
      "type": "bool",
      "defaultValue": true
    }

  },
  "variables": {
    "virtualMachineName": "[concat(parameters('serverName'), '-vm')]",
    "networkSecurityGroupName": "[concat(parameters('serverName'), '-nsg')]",
    "publicIpAddressName": "[concat(parameters('serverName'), '-ip')]",
    "virtualNetworkName": "[concat(parameters('serverName'), '-vnet')]",
    "networkInterfaceName": "[concat(parameters('serverName'), '-ni')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-08-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            }

          },
          {
            "name": "taserver",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRanges": [
                "7777",
                "7778",
                "9002"
              ],
              "access": "Allow",
              "priority": 1010,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-08-01",
      "name": "[variables('publicIpAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
           "domainNameLabel": "[concat(parameters('serverName'), '-', take(uniqueString(resourceGroup().id, deployment().name), 5))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-08-01",
      "name": "[variables('virtualNetworkName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.1.0/24"
          ]
        },
        "subnets": [
          {
            "name": "default",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2019-07-01",
      "name": "[variables('virtualMachineName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
      ],
      "properties": {
        "priority": "[if(parameters('spotInstance'), 'Spot', 'Regular')]",
        "evictionPolicy": "[if(parameters('spotInstance'), 'Deallocate', json('null'))]",
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "canonical",
            "offer": "0001-com-ubuntu-server-focal",
            "sku": "20_04-lts",
            "version": "latest"
          },
          "osDisk": {
            "osType": "Linux",
            "name": "[concat(variables('virtualMachineName'), '-osdisk')]",
            "createOption": "FromImage",
            "caching": "ReadWrite",
            "diskSizeGB": 30
          }
        },
        "osProfile": {
          "computerName": "[parameters('serverName')]",
          "adminUsername": "azureuser",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/azureuser/.ssh/authorized_keys",
                  "keyData": "[parameters('sshPubKey')]"
                }
              ]
            },
            "provisionVMAgent": true
          },
          "allowExtensionOperations": true
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[concat(variables('virtualMachineName'),'/CustomScript')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "dependsOn": ["[variables('virtualMachineName')]"],
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {},
        "protectedSettings": {
          "commandToExecute": "cp taserver_setup_ubuntu.sh /home/azureuser && cd /home/azureuser && chmod a+rwx taserver_setup_ubuntu.sh && sudo -u azureuser ./taserver_setup_ubuntu.sh",
          "fileUris": ["https://raw.githubusercontent.com/chickenbellyfin/taserver-deploy/ubuntu/taserver_setup_ubuntu.sh"]
        }
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks/subnets",
      "apiVersion": "2020-08-01",
      "name": "[concat(variables('virtualNetworkName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "addressPrefix": "10.0.1.0/24",
        "privateEndpointNetworkPolicies": "Enabled",
        "privateLinkServiceNetworkPolicies": "Enabled"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-08-01",
      "name": "[variables('networkInterfaceName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'default')]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
        "enableIPForwarding": false,
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        }
      }
    }
  ]
}