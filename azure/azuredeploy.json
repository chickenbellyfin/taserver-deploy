{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "windowsServerName": {
            "defaultValue": "my-taserver",
            "type": "string",
            "metadata": {
                "description": "This name is used for the VM & related resources in Azure. No spaces or special characters other than '-'"
            }
        },
        "windowsAdminUserName": {
            "type": "string",
            "metadata": {
                "description": "Admin user name for the windows server."
            }
        },
        "windowsPassword": {
            "type": "securestring",
            "metadata": {
                "description": "This is the password for the server in Azure. Keep it secure."
            }
        },
        "tribesServerTemplate": {
            "type": "string",
            "allowedValues": [
                "CTF",
                "TDM",
                "Rabbit",
                "HonorArena",
                "MixerCTF"
            ]
        },
        "tribesServerName": {
            "type": "string",
            "minLength": 3,
            "metadata": {
                "description": "This name will show up in the Tribes server list"
            }
        },
        "tribesServerPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. Leave blank for no password"
            }
        },
        "tribesServerAdminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Optional. This password is for managing the game in Tribes (switching maps, etc)"
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_F2s",
            "metadata": {
              "description": "If you don't know, use the default."
            }
        },
        "spotInstance": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Significantly lowers cost, but server will have a small chance of being shut down if there is not enough spare capacity."
            }
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "defaultValue": true
        }

    },
    "variables": {
        "virtualMachineName": "[concat(parameters('windowsServerName'), '-vm')]",
        "networkSecurityGroupName": "[concat(parameters('windowsServerName'), '-nsg')]",
        "publicIpAddressName": "[concat(parameters('windowsServerName'), '-ip')]",
        "virtualNetworkName": "[concat(parameters('windowsServerName'), '-vnet')]",
        "networkInterfaceName": "[concat(parameters('windowsServerName'), '-ni')]",
        "customData": {
            "tribesServerTemplate": "[parameters('tribesServerTemplate')]",
            "tribesServerName": "[parameters('tribesServerName')]",
            "tribesServerAdminPassword": "[parameters('tribesServerAdminPassword')]",
            "tribesServerPassword": "[parameters('tribesServerPassword')]"
        },
        "taserverDeployBranch": "master"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-08-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 300,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "TCP-7777-8",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "7777-7778",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 310,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "UDP-7777-8",
                        "properties": {
                            "protocol": "UDP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "7777-7778",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 320,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "TCP-9002",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "9002",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 330,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('publicIpAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
              "publicIPAllocationMethod": "Dynamic",
              "dnsSettings": {
                   "domainNameLabel": "[concat(parameters('windowsServerName'), '-', take(uniqueString(resourceGroup().id, deployment().name), 5))]"
              }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-08-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.1.0/24"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[variables('virtualMachineName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            ],
            "properties": {
                "priority": "[if(parameters('spotInstance'), 'Spot', 'Regular')]",
                "evictionPolicy":"Deallocate",
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(variables('virtualMachineName'), '-osdisk')]",
                        "createOption": "FromImage",
                        "diskSizeGB": 127
                    }
                },
                "osProfile": {
                    "computerName": "taserver",
                    "adminUsername": "[parameters('windowsAdminUsername')]",
                    "adminPassword": "[parameters('windowsPassword')]",
                    "customData": "[base64(string(variables('customData')))]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": false
                    },
                    "allowExtensionOperations": true
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-08-01",
            "name": "[concat(variables('virtualNetworkName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.1.0/24",
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2019-07-01",
            "name": "[concat(variables('virtualMachineName'), '/CustomScriptExtension')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('virtualMachineName'))]"
            ],
            "properties": {
                "autoUpgradeMinorVersion": true,
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "settings": {
                    "fileUris": [
                        "[concat('https://raw.githubusercontent.com/chickenbellyfin/taserver-deploy/', variables('taserverDeployBranch'), '/taserver_setup.ps1')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File taserver_setup.ps1 ', variables('taserverDeployBranch'), ' C:\\AzureData\\CustomData.bin')]"
                }
            }
        },

        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-08-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIpAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), 'default')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
            }
        }
    ]
}